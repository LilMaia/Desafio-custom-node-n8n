#!/bin/bash

echo "üöÄ Iniciando setup do n8n Custom Random Node..."

# Verificar se Docker est√° instalado
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker n√£o est√° instalado. Por favor, instale o Docker primeiro."
    echo "   Download: https://www.docker.com/products/docker-desktop/"
    exit 1
fi

# Verificar se Node.js est√° instalado
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js n√£o est√° instalado. Por favor, instale o Node.js 22 primeiro."
    exit 1
fi

# Verificar vers√£o do Node.js
NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 18 ]; then
    echo "‚ùå Vers√£o do Node.js muito antiga. Por favor, instale o Node.js 18+ ou 22 (LTS)."
    exit 1
fi

echo "‚úÖ Depend√™ncias verificadas!"

# Instalar depend√™ncias do custom node
echo "üì¶ Instalando depend√™ncias do custom node..."
cd n8n-custom-random-node
npm install

if [ $? -ne 0 ]; then
    echo "‚ùå Erro ao instalar depend√™ncias do npm."
    exit 1
fi

# Compilar o custom node
echo "üî® Compilando o custom node..."
npm run build

if [ $? -ne 0 ]; then
    echo "‚ùå Erro ao compilar o custom node."
    exit 1
fi

cd ..

# Copiar arquivo .env se n√£o existir
if [ ! -f .env ]; then
    echo "üìù Criando arquivo .env..."
    cp .env.example .env
fi

# Iniciar os servi√ßos Docker
echo "üê≥ Iniciando servi√ßos Docker..."

# Tentar docker compose primeiro (vers√£o mais nova), depois docker-compose
DOCKER_COMPOSE_CMD=""
if command -v docker &> /dev/null && docker compose version &> /dev/null; then
    DOCKER_COMPOSE_CMD="docker compose"
elif command -v docker-compose &> /dev/null; then
    DOCKER_COMPOSE_CMD="docker-compose"
fi

if [ -z "$DOCKER_COMPOSE_CMD" ]; then
    echo "‚ùå Docker Compose n√£o est√° dispon√≠vel. Verifique se o Docker est√° instalado e executando."
    exit 1
fi

echo "   Usando: $DOCKER_COMPOSE_CMD"
$DOCKER_COMPOSE_CMD up -d

if [ $? -ne 0 ]; then
    echo "‚ùå Erro ao iniciar os servi√ßos Docker."
    exit 1
fi

echo ""
echo "üéâ Setup conclu√≠do com sucesso!"
echo ""
echo "üìã Pr√≥ximos passos:"
echo "   1. Aguarde alguns segundos para os servi√ßos inicializarem"
echo "   2. Acesse http://localhost:5678"
echo "   3. Fa√ßa login com:"
echo "      Usu√°rio: admin"
echo "      Senha: admin123"
echo "   4. Crie um novo workflow e adicione o node 'Random'"
echo ""
echo "üîß Comandos √∫teis:"
echo "   $DOCKER_COMPOSE_CMD logs -f n8n     # Ver logs do n8n"
echo "   $DOCKER_COMPOSE_CMD logs -f postgres # Ver logs do PostgreSQL"
echo "   $DOCKER_COMPOSE_CMD stop            # Parar os servi√ßos"
echo "   $DOCKER_COMPOSE_CMD down            # Parar e remover containers"
echo ""